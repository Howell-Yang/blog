<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/markdown/</link>
    <description>Recent content in Markdown on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Apr 2020 18:15:00 -0700</lastBuildDate><atom:link href="https://www.howellyang.com/tags/markdown/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing MultiMarkdown 6 on Ubuntu 19.10</title>
      <link>https://www.howellyang.com/2020/04/03/installing-mmd6-on-ubuntu-1910/</link>
      <pubDate>Fri, 03 Apr 2020 18:15:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/04/03/installing-mmd6-on-ubuntu-1910/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; is a core part of many of my workflows. For quite a while, I&amp;rsquo;ve used Fletcher Penny&amp;rsquo;s MultiMarkdown processor (available on &lt;a href=&#34;https://github.com/fletcher/MultiMarkdown-6/&#34;&gt;GitHub&lt;/a&gt;) on my various systems. Fletcher offers binary builds for Windows and macOS, but not a Linux binary. Three years ago, I wrote a post on &lt;a href=&#34;https://www.howellyang.com/2017/11/25/installing-mmd6-on-fedora-27/&#34;&gt;how to compile MultiMarkdown 6 for a Fedora-based system&lt;/a&gt;. In this post, I&amp;rsquo;ll share how to compile it on an Ubuntu-based system.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Linux Migration: Preparing for the Migration</title>
      <link>https://www.howellyang.com/2019/05/11/linux-migration-preparing-for-the-migration/</link>
      <pubDate>Sat, 11 May 2019 19:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2019/05/11/linux-migration-preparing-for-the-migration/</guid>
      <description>&lt;p&gt;As far back as 2012, I was &lt;a href=&#34;https://www.howellyang.com/2012/11/30/why-i-might-leave-os-x/&#34;&gt;already thinking&lt;/a&gt; about migrating away from Mac OS X (now known as macOS). While the migration didn&amp;rsquo;t &lt;a href=&#34;https://www.howellyang.com/2016/12/16/linux-migration-initial-progress-report/&#34;&gt;start in earnest until late 2016&lt;/a&gt;, a fair amount of work happened in advance of the migration. Since I&amp;rsquo;ve had a number of folks ask me about migrating to Linux, I thought I&amp;rsquo;d supplement &lt;a href=&#34;https://www.howellyang.com/2018/12/23/the-linux-migration-series/&#34;&gt;my Linux migration series&lt;/a&gt; with a &amp;ldquo;prequel&amp;rdquo; about some of the work that happened to prepare for the migration.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Markdown-to-PDF Workflow on Linux</title>
      <link>https://www.howellyang.com/2018/09/27/a-markdown-to-pdf-workflow-on-linux/</link>
      <pubDate>Thu, 27 Sep 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/09/27/a-markdown-to-pdf-workflow-on-linux/</guid>
      <description>&lt;p&gt;In May of last year I wrote about &lt;a href=&#34;https://www.howellyang.com/2017/05/08/using-makefile-with-markdown-documents/&#34;&gt;using a &lt;code&gt;Makefile&lt;/code&gt; with Markdown documents&lt;/a&gt;, in which I described how I use &lt;code&gt;make&lt;/code&gt; and a &lt;code&gt;Makefile&lt;/code&gt; along with CLI tools like &lt;code&gt;multimarkdown&lt;/code&gt; (the binary, not the format) and &lt;a href=&#34;http://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt;. At that time, I&amp;rsquo;d figured out how to use combinations of the various CLI tools to create various formats from the source &lt;a href=&#34;https://twitter.com/scott_lowe&#34;&gt;Markdown&lt;/a&gt; document. The one format I hadn&amp;rsquo;t gotten right at that time was PDF. Pandoc &lt;em&gt;can&lt;/em&gt; create PDFs, but only if &lt;a href=&#34;https://www.latex-project.org/&#34;&gt;LaTeX&lt;/a&gt; is installed. This article describes a method I found that allows me to create PDFs from my Markdown documents &lt;em&gt;without&lt;/em&gt; using LaTeX.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Posts from the Past, May 2018</title>
      <link>https://www.howellyang.com/2018/05/18/posts-from-the-past-may-2018/</link>
      <pubDate>Mon, 21 May 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/05/18/posts-from-the-past-may-2018/</guid>
      <description>&lt;p&gt;This month&amp;mdash;May 2018&amp;mdash;marks &lt;strong&gt;thirteen years&lt;/strong&gt; that I&amp;rsquo;ve been generating content here on this site. It&amp;rsquo;s been a phenomenal 13 years, and I&amp;rsquo;ve enjoyed the opportunity to share information with readers around the world. To celebrate, I thought I&amp;rsquo;d do a quick &amp;ldquo;Posts from the Past&amp;rdquo; and highlight some content from previous years. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An Updated Look at My Multi-Platform Toolbelt</title>
      <link>https://www.howellyang.com/2018/04/30/updated-look-at-multi-platform-toolbelt/</link>
      <pubDate>Mon, 30 Apr 2018 20:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/04/30/updated-look-at-multi-platform-toolbelt/</guid>
      <description>&lt;p&gt;In early 2017 I posted about &lt;a href=&#34;https://www.howellyang.com/2017/01/03/my-evolving-multi-platform-toolbelt/&#34;&gt;my (evolving) multi-platform toolbelt&lt;/a&gt;, describing some of the applications, standards, and services that I use across my Linux and macOS systems. In this post, I&amp;rsquo;d like to provide an updated review of that toolbelt.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Information on the Recent Site Migration</title>
      <link>https://www.howellyang.com/2017/08/10/information-recent-site-migration/</link>
      <pubDate>Thu, 10 Aug 2017 11:30:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/08/10/information-recent-site-migration/</guid>
      <description>&lt;p&gt;Earlier this week, I completed the migration of this site to an entirely new platform, marking the third or fourth platform migration for this site in its 12-year history. Prior to the migration, the site was generated using &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; and &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; following &lt;a href=&#34;https://www.howellyang.com/2015/01/05/blog-migration-complete/&#34;&gt;a previous migration in late 2014&lt;/a&gt;. Prior to that, I ran &lt;a href=&#34;https://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; for about 9 years. So what is it running now?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using a Makefile with Markdown Documents</title>
      <link>https://www.howellyang.com/2017/05/08/using-makefile-with-markdown-documents/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/05/08/using-makefile-with-markdown-documents/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s no secret that I&amp;rsquo;m a big fan of using &lt;a href=&#34;http://daringfireball.com/markdown/&#34;&gt;Markdown&lt;/a&gt; (specifically, &lt;a href=&#34;http://fletcherpenney.net/multimarkdown/&#34;&gt;MultiMarkdown&lt;/a&gt;) for the vast majority of all the text-based content that I create. Over the last few years, I&amp;rsquo;ve created used various tools and created scripts to help &amp;ldquo;reduce the friction&amp;rdquo; involved with outputting Markdown source files into a variety of destination formats (HTML, RTF, or DOCX, for example). Recently, &lt;a href=&#34;http://blog.codybunch.com/2017/04/17/On-Computerized-Note-Taking/&#34;&gt;thanks to Cody Bunch&lt;/a&gt;, I was pointed toward the use of a &lt;code&gt;Makefile&lt;/code&gt; to assist in this area. After a short period of experimentation, I&amp;rsquo;m finding that I really like this workflow, and I wanted to share some details here with my readers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Linux Migration: Creating Presentations</title>
      <link>https://www.howellyang.com/2017/03/07/linux-migration-creating-presentations/</link>
      <pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/03/07/linux-migration-creating-presentations/</guid>
      <description>Long-time readers of my site know that I&amp;rsquo;m a fan of Markdown, and I use it extensively. (This blog, in fact, is written entirely in Markdown and converted to HTML using Jekyll on GitHub Pages.) Since migrating to Linux as my primary desktop OS, I&amp;rsquo;ve also made the transition to doing almost all my presentations in Markdown as well. Here are the details on how I&amp;rsquo;m using Markdown for creating presentations on Linux.</description>
    </item>
    
    <item>
      <title>OPML-to-Markdown Conversion Script</title>
      <link>https://www.howellyang.com/2017/01/16/opml-to-markdown-script/</link>
      <pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/01/16/opml-to-markdown-script/</guid>
      <description>In this post, I&amp;rsquo;d like to share a script I wrote to help with converting Outline Processor Markup Language (OPML) documents to Markdown. If you read the recent update on my Linux migration plans, you may recall that I identified OPML files (created in OmniOutliner) as an area where some work was going to be required. This script is the result of my efforts in this area.
&amp;lt;aside&amp;gt;Before I continue, I want to very briefly point out that this script was written to help in my specific use case.</description>
    </item>
    
    <item>
      <title>My (Evolving) Multi-Platform Toolbelt</title>
      <link>https://www.howellyang.com/2017/01/03/my-evolving-multi-platform-toolbelt/</link>
      <pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/01/03/my-evolving-multi-platform-toolbelt/</guid>
      <description>A few days ago I posted a tweet about a new tool I&amp;rsquo;d (re-)discovered called jrnl. Someone replied to that tweet, asking me to list my &amp;ldquo;multi-platform toolbelt.&amp;rdquo; While it&amp;rsquo;s still evolving (every day!), I thought it might make for a good blog post. So, here&amp;rsquo;s a list of my still-evolving multi-platform toolbelt.
  Sublime Text: Over the last few years, I&amp;rsquo;ve moved to creating the vast majority of my content in Markdown (MultiMarkdown, to be more specific).</description>
    </item>
    
    <item>
      <title>Presentations in Markdown Using Deckset</title>
      <link>https://www.howellyang.com/2015/02/18/presentations-markdown-deckset/</link>
      <pubDate>Wed, 18 Feb 2015 09:55:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/02/18/presentations-markdown-deckset/</guid>
      <description>Over the past couple of years, Markdown has become an important part of my computing landscape. I&amp;rsquo;ve transitioned almost all of my text-based content creation, including this blog, over to Markdown. I&amp;rsquo;d also been looking for ways that I might be able to extend my use of Markdown into creating presentations as well, but hadn&amp;rsquo;t&amp;mdash;until recently&amp;mdash;found a tool that fit into my workflow. Then I started using Deckset.
The idea behind Deckset is not unique; there are other projects out there that do the same sort of thing.</description>
    </item>
    
    <item>
      <title>Converting URLs to Jekyll References</title>
      <link>https://www.howellyang.com/2015/01/08/converting-urls-jekyll-refs/</link>
      <pubDate>Thu, 08 Jan 2015 03:42:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/01/08/converting-urls-jekyll-refs/</guid>
      <description>In my post about the story behind the migration, I mentioned that I made extensive use of regular expressions (&amp;ldquo;regexes&amp;rdquo;) to help reformat portions of the Markdown documents that are used by Jekyll to build this site. In this post, I wanted to briefly share one of the regexes I used (and am still using) to convert URLs to Jekyll references.
First, let me clarify what I mean by Jekyll references.</description>
    </item>
    
    <item>
      <title>The Story Behind the Migration</title>
      <link>https://www.howellyang.com/2015/01/06/the-story-behind-the-migration/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/01/06/the-story-behind-the-migration/</guid>
      <description>A number of people have asked me why I migrated from WordPress&amp;mdash;which powered my blog for 9 years&amp;mdash;to Jekyll and GitHub Pages. Now that the migration is finally complete, I can share with you the story behind the migration: why I migrated, the process I followed, and some of the tools I used.
Why I Migrated &amp;ldquo;Why?&amp;rdquo; is a question I heard quite a bit as I was sharing updates on the progress of the blog migration over the Christmas/New Year holiday.</description>
    </item>
    
    <item>
      <title>Some Useful Markdown Tools for OS X</title>
      <link>https://www.howellyang.com/2014/05/19/some-useful-markdown-tools-for-os-x/</link>
      <pubDate>Mon, 19 May 2014 09:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2014/05/19/some-useful-markdown-tools-for-os-x/</guid>
      <description>I don&amp;rsquo;t think that it is any secret that I&amp;rsquo;ve become a big fan of Markdown (MultiMarkdown to be precise; more on that in a moment) over the last couple of years. Likewise, it&amp;rsquo;s not really a secret that I&amp;rsquo;m an OS X user, although my &amp;ldquo;fanboi&amp;rdquo; status for OS X has waned a bit since the introduction of Lion and Mountain Lion (neither of which are as good, in my opinion, as Snow Leopard, but that&amp;rsquo;s an entirely different discussion&amp;mdash;the jury is still out on Mavericks).</description>
    </item>
    
    <item>
      <title>Reducing the Friction: BBEdit to MarsEdit</title>
      <link>https://www.howellyang.com/2013/05/31/reducing-the-friction-bbedit-to-marsedit/</link>
      <pubDate>Fri, 31 May 2013 11:47:15 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/05/31/reducing-the-friction-bbedit-to-marsedit/</guid>
      <description>In some of the presentations that I give on productivity and efficiency, one of the things I mention is reducing the friction; that is, making processes more streamlined so they&amp;rsquo;re easier to perform. In this post, I&amp;rsquo;m going to describe one way I reduced the friction for producing and publishing blog posts using BBEdit, TextSoap, MarsEdit, and some AppleScript.
It&amp;rsquo;s no secret that I&amp;rsquo;ve become a huge fan of Markdown, the human-readable plain text &amp;ldquo;markup&amp;rdquo; format created by Jon Gruber.</description>
    </item>
    
  </channel>
</rss>
