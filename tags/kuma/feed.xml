<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kuma on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/kuma/</link>
    <description>Recent content in Kuma on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Feb 2022 08:45:00 -0700</lastBuildDate><atom:link href="https://www.howellyang.com/tags/kuma/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using cert-manager with Kuma for mTLS</title>
      <link>https://www.howellyang.com/2022/02/17/using-cert-manager-with-kuma-mtls/</link>
      <pubDate>Thu, 17 Feb 2022 08:45:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2022/02/17/using-cert-manager-with-kuma-mtls/</guid>
      <description>&lt;p&gt;When configuring mutual TLS (mTLS) on &lt;a href=&#34;https://kuma.io/&#34;&gt;the open source Kuma service mesh&lt;/a&gt;, users have a couple of different options. They can use a &amp;ldquo;builtin&amp;rdquo; certificate authority (CA), in which Kuma itself will generate a CA certificate and key for use in creating service-specific mTLS certificates. Users also have the option of using a &amp;ldquo;provided&amp;rdquo; CA, in which they must supply a CA certificate and key for Kuma to use when creating service-specific mTLS certificates. Both of these options are described &lt;a href=&#34;https://kuma.io/docs/1.4.x/policies/mutual-tls/&#34;&gt;on this page in the Kuma documentation&lt;/a&gt;. In this post, I&amp;rsquo;d like to explore the use of &lt;a href=&#34;https://cert-manager.io/&#34;&gt;cert-manager&lt;/a&gt; as a &amp;ldquo;provided&amp;rdquo; CA for mTLS on Kuma.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creating Reusable Kuma Installation YAML</title>
      <link>https://www.howellyang.com/2021/10/21/creating-reusable-kuma-installation-yaml/</link>
      <pubDate>Thu, 21 Oct 2021 09:15:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/10/21/creating-reusable-kuma-installation-yaml/</guid>
      <description>&lt;p&gt;Using CLI tools&amp;mdash;instead of a &amp;ldquo;wall of YAML&amp;rdquo;&amp;mdash;to install things onto &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt; is a growing trend, it seems. &lt;a href=&#34;https://istio.io&#34;&gt;Istio&lt;/a&gt; and &lt;a href=&#34;https://cilium.io&#34;&gt;Cilium&lt;/a&gt;, for example, each have a CLI tool for installing their respective project. I get the reasons why; you can build logic into a CLI tool that you can&amp;rsquo;t build into a YAML file. &lt;a href=&#34;https://kuma.io&#34;&gt;Kuma&lt;/a&gt;, the open source service mesh maintained largely by Kong and a CNCF Sandbox project, takes a similar approach with its &lt;code&gt;kumactl&lt;/code&gt; tool. In this post, however, I&amp;rsquo;d like to take a look at creating reusable YAML to install Kuma, instead of using the CLI tool every time you install.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Older Versions of Kumactl on an M1 Mac</title>
      <link>https://www.howellyang.com/2021/06/25/installing-older-versions-of-kumactl-on-an-m1-mac/</link>
      <pubDate>Fri, 25 Jun 2021 15:30:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/06/25/installing-older-versions-of-kumactl-on-an-m1-mac/</guid>
      <description>&lt;p&gt;The Kuma community &lt;a href=&#34;https://kuma.io/blog/2021/kuma-1-2-0/&#34;&gt;recently released version 1.2.0&lt;/a&gt; of the open source Kuma service mesh, and along with it a corresponding version of &lt;code&gt;kumactl&lt;/code&gt;, the command-line utility for interacting with Kuma. To make it easy for macOS users to get &lt;code&gt;kumactl&lt;/code&gt;, the Kuma community maintains a &lt;a href=&#34;https://brew.sh&#34;&gt;Homebrew&lt;/a&gt; formula for the CLI utility. That includes providing M1-native (ARM64) macOS binaries for &lt;code&gt;kumactl&lt;/code&gt;. Unfortunately, installing an earlier version of &lt;code&gt;kumactl&lt;/code&gt; on an M1-based Mac using Homebrew is somewhat less than ideal. Here&amp;rsquo;s one way&amp;mdash;probably not the only way&amp;mdash;to work around some of the challenges.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
