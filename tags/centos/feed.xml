<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CentOS on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/centos/</link>
    <description>Recent content in CentOS on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Jul 2019 23:00:00 +0000</lastBuildDate><atom:link href="https://www.howellyang.com/tags/centos/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Jsonnet from Source</title>
      <link>https://www.howellyang.com/2019/07/07/building-jsonnet-from-source/</link>
      <pubDate>Sun, 07 Jul 2019 23:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2019/07/07/building-jsonnet-from-source/</guid>
      <description>&lt;p&gt;I recently decided to start working with &lt;code&gt;jsonnet&lt;/code&gt;, a data templating language and associated command-line interface (CLI) tool for manipulating and/or generating various data formats (like JSON, YAML, or other formats; see &lt;a href=&#34;https://jsonnet.org/&#34;&gt;the Jsonnet web site&lt;/a&gt; for more information). However, I found that there are no prebuilt binaries for &lt;code&gt;jsonnet&lt;/code&gt; (at least, not that I could find), and so I thought I&amp;rsquo;d share here the process for building &lt;code&gt;jsonnet&lt;/code&gt; from source. It&amp;rsquo;s not hard or complicated, but hopefully sharing this information will streamline the process for others.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CentOS Atomic Host Customization Using cloud-init</title>
      <link>https://www.howellyang.com/2017/06/01/centos-atomic-host-customization-using-cloud-init/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/06/01/centos-atomic-host-customization-using-cloud-init/</guid>
      <description>&lt;p&gt;Back in early March of this year, I wrote a post on &lt;a href=&#34;https://www.howellyang.com/2017/03/02/customizing-docker-centos-atomic-host/&#34;&gt;customizing the Docker Engine on CentOS Atomic Host&lt;/a&gt;. In that post, I showed how you could use systemd constructs like drop-in units to customize the behavior of the Docker Engine when running on CentOS Atomic Host. In this post, I&amp;rsquo;m going to build on that information to show how this can be done using &lt;code&gt;cloud-init&lt;/code&gt; on a public cloud provider (AWS, in this case).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 82</title>
      <link>https://www.howellyang.com/2017/05/05/technology-short-take-82/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/05/05/technology-short-take-82/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #82! This issue is a bit behind schedule; I&amp;rsquo;ve been pretty heads-down on some projects. That work will come to fruition in a couple weeks, so I should be able to come up for some air soon. In the meantime, here&amp;rsquo;s a few links and articles for your reading pleasure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Revisiting CentOS Atomic Host</title>
      <link>https://www.howellyang.com/2017/04/25/revisiting-centos-atomic-host/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/04/25/revisiting-centos-atomic-host/</guid>
      <description>&lt;p&gt;A couple years ago, I wrote an article about how I was &lt;a href=&#34;https://www.howellyang.com/2015/03/08/choosing-coreos-over-atomic/&#34;&gt;choosing CoreOS over Project Atomic&lt;/a&gt; based on some initial testing with CentOS Atomic Host builds. As it turns out&amp;mdash;and as I pointed out in the &amp;ldquo;Update&amp;rdquo; section of that article&amp;mdash;the Atomic Host builds I was using were pre-release builds, and therefore it wasn&amp;rsquo;t really appropriate to form an assessment based on pre-release builds. Now that both &lt;a href=&#34;https://projectatomic.io/&#34;&gt;CentOS Atomic Host&lt;/a&gt; and &lt;a href=&#34;https://coreos.com/&#34;&gt;CoreOS&lt;/a&gt; Container Linux have both grown and matured, I thought I&amp;rsquo;d revisit the topic and see how&amp;mdash;if at all&amp;mdash;things have changed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Linux Migration: Other Users&#39; Stories, Part 2</title>
      <link>https://www.howellyang.com/2017/03/06/linux-migration-other-users-stories-pt2/</link>
      <pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/03/06/linux-migration-other-users-stories-pt2/</guid>
      <description>This post is part of a series of posts sharing the stories of other users who have decided to migrate to Linux as their primary desktop OS. Each person&amp;rsquo;s migration (and their accompanying story) is unique; some people have embraced Linux only on their home computer; others are using it at work as well. I believe that sharing this information will help readers who may be considering a migration of their own, and who have questions about whether this is right for them and their particular needs.</description>
    </item>
    
    <item>
      <title>Customizing Docker Engine on CentOS Atomic Host</title>
      <link>https://www.howellyang.com/2017/03/02/customizing-docker-centos-atomic-host/</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/03/02/customizing-docker-centos-atomic-host/</guid>
      <description>I&amp;rsquo;ve been spending some time recently with CentOS Atomic Host, the container-optimized version of CentOS (part of Project Atomic). By default, the Docker Engine on CentOS Atomic Host listens only to a local UNIX socket, and is not accessible over the network. While CentOS has its own particular way of configuring the Docker Engine, I wanted to see if I could&amp;mdash;in a very &amp;ldquo;systemd-like&amp;rdquo; fashion&amp;mdash;make Docker Engine on CentOS listen on a network socket as well as a local UNIX socket.</description>
    </item>
    
    <item>
      <title>Technology Short Take #78</title>
      <link>https://www.howellyang.com/2017/02/17/technology-short-take-78/</link>
      <pubDate>Fri, 17 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2017/02/17/technology-short-take-78/</guid>
      <description>Welcome to Technology Short Take #78! Here&amp;rsquo;s another collection of links and articles from around the Internet discussing various data center-focused technologies.
Networking  The rise of the disaggregated network operating system (NOS) marches on: this time, it&amp;rsquo;s Big Switch Networks announcing expanded hardware support in Open Network Linux (ONL), upon which its own NOS is based. The Pivotal Engineering blog has an article that shows how to use BOSH with the vSphere CPI to automate adding servers to an NSX load balancing pool.</description>
    </item>
    
    <item>
      <title>Choosing CoreOS over Project Atomic</title>
      <link>https://www.howellyang.com/2015/03/08/choosing-coreos-over-atomic/</link>
      <pubDate>Sun, 08 Mar 2015 16:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/03/08/choosing-coreos-over-atomic/</guid>
      <description>Upon hearing the news that Red Hat had released the Atomic Host variant of Red Hat Enterprise Linux, I decided that it would be a good idea for me to take a look at the CentOS flavor of the Atomic Host variant. In case you&amp;rsquo;re unfamiliar, the Atomic Host variant is the result of Project Atomic, which aimed to provide a container-optimized flavor of RHEL/CentOS/Fedora. This container-optimized flavor would leverage rpm-ostree for atomic system updates (hence the name) and come with Docker preinstalled.</description>
    </item>
    
    <item>
      <title>Looking Ahead: My 2013 Projects</title>
      <link>https://www.howellyang.com/2013/02/07/looking-ahead-my-2013-projects/</link>
      <pubDate>Thu, 07 Feb 2013 10:05:19 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/02/07/looking-ahead-my-2013-projects/</guid>
      <description>In early January 2012, I posted a list of my 2012 projects. Those projects included learning to script in Perl, learning German, becoming more familiar with Xen/Open vSwitch/OpenStack, and pursuing CCNP. In late June 2012, my mid-year project update let you know that I was dropping the Perl efforts, but sticking it out with German, Xen/OVS/OpenStack, and CCNP. (I later dropped Xen in favor of KVM.) Finally, in early January 2013 I graded myself on my progress on my 2012 goals.</description>
    </item>
    
    <item>
      <title>Using Mock to Build Libvirt 1.0.1 RPMs for CentOS 6.3</title>
      <link>https://www.howellyang.com/2013/01/22/using-mock-to-build-libvirt-1-0-1-rpms-for-centos-6-3/</link>
      <pubDate>Tue, 22 Jan 2013 13:59:15 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/01/22/using-mock-to-build-libvirt-1-0-1-rpms-for-centos-6-3/</guid>
      <description>In this third post on using Mock to build RPMs for CentOS 6.3, I&amp;rsquo;m going to show you how to use Mock to build RPMs for Libvirt 1.0.1 that you can install on CentOS. As you&amp;rsquo;ll see later, this post builds on the previous two posts (one on using Mock to build RPMs for sanlock 2.4 and one on using Mock to build RPMs for libssh2 1.4.1).
Here&amp;rsquo;s a quick overview of the process:</description>
    </item>
    
    <item>
      <title>Using Mock to Build libssh2 1.4.1 RPMs for CentOS 6.3</title>
      <link>https://www.howellyang.com/2013/01/22/using-mock-to-build-libssh2-1-4-1-rpms-for-centos-6-3/</link>
      <pubDate>Tue, 22 Jan 2013 12:00:41 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/01/22/using-mock-to-build-libssh2-1-4-1-rpms-for-centos-6-3/</guid>
      <description>As with the related post on using Mock to rebuild sanlock 2.4 for CentOS 6.3, this post might seem a bit odd. Don&amp;rsquo;t worry&amp;mdash;I&amp;rsquo;ll tie it into something else very soon. In this post, I&amp;rsquo;ll show you how to use Mock to build RPMs for libssh2 1.4.1 for use with CentOS 6.3.
The information in this post is based on information found in two other very helpful pages:
Using Mock to test package builds</description>
    </item>
    
    <item>
      <title>Using Mock to Build Sanlock 2.4 RPMs for CentOS 6.3</title>
      <link>https://www.howellyang.com/2013/01/22/using-mock-to-build-sanlock-2-4-rpms-for-centos-6-3/</link>
      <pubDate>Tue, 22 Jan 2013 11:43:09 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/01/22/using-mock-to-build-sanlock-2-4-rpms-for-centos-6-3/</guid>
      <description>The topic of this post might seem a bit strange, but it will all make sense later. In this post, I&amp;rsquo;ll show you how to use Mock to build RPMs for sanlock 2.4 for use with CentOS 6.3.
The information in this post is based on information found in two other very helpful pages:
Using Mock to test package builds
How to rebuild a package from Fedora or EPEL for RHEL, CentOS, or SL</description>
    </item>
    
    <item>
      <title>Building Libvirt 1.0.1 RPMs for CentOS 6.3</title>
      <link>https://www.howellyang.com/2013/01/16/building-libvirt-1-0-1-rpms-for-centos-6-3/</link>
      <pubDate>Wed, 16 Jan 2013 17:27:36 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/01/16/building-libvirt-1-0-1-rpms-for-centos-6-3/</guid>
      <description>In previous articles, I&amp;rsquo;ve shown you how to compile libvirt 0.10.1 on CentOS 6.3, but&amp;mdash;as several readers have pointed out in the comments to that and other articles&amp;mdash;compiling packages from source may not be the best long-term approach. Not only does it make it difficult to keep the system up-to-date, it also makes automating the configuration of the host rather difficult. In this post, I&amp;rsquo;ll show you how to rebuild a source RPM for libvirt 1.</description>
    </item>
    
    <item>
      <title>Technology Short Take #27</title>
      <link>https://www.howellyang.com/2012/12/06/technology-short-take-27/</link>
      <pubDate>Thu, 06 Dec 2012 18:20:26 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2012/12/06/technology-short-take-27/</guid>
      <description>Welcome to Technology Short Take #27! This is my usual collection of links, thoughts, rants, and ideas about data center-related technologies. Here&amp;rsquo;s hoping you find something useful!
Networking   If you&amp;rsquo;re interested in learning more about OpenFlow and software-defined networking but need to do this on a shoestring budget in your home lab, a number of guides have been written to help out. I haven&amp;rsquo;t personally used any of these guides yet, but I&amp;rsquo;m working my way in that direction.</description>
    </item>
    
    <item>
      <title>Compiling libvirt 0.10.1 on CentOS 6.3</title>
      <link>https://www.howellyang.com/2012/09/06/compiling-libvirt-0-10-1-on-centos-6-3/</link>
      <pubDate>Thu, 06 Sep 2012 17:22:30 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2012/09/06/compiling-libvirt-0-10-1-on-centos-6-3/</guid>
      <description>In my post on installing KVM and Open vSwitch on Ubuntu, I mentioned that I was using libvirt as the virtualization API/toolkit by which to manage KVM. Unfortunately, that particular version of libvirt didn&amp;rsquo;t have built-in support for Open vSwitch; that was added in libvirt 0.9.11 (I think that I was using 0.9.8 in my testing). In any case, I noticed that libvirt had released 0.10.1 on August 31, and it included a couple of OVS fixes regarding VLANs and VLAN support (among a host of other fixes; see here for more details).</description>
    </item>
    
  </channel>
</rss>
