<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CAPI on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/capi/</link>
    <description>Recent content in CAPI on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 May 2022 14:30:00 -0600</lastBuildDate><atom:link href="https://www.howellyang.com/tags/capi/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fine-Tuning Control Plane Access with Cluster API</title>
      <link>https://www.howellyang.com/2022/05/12/fine-tuning-control-plane-access-with-cluster-api/</link>
      <pubDate>Thu, 12 May 2022 14:30:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2022/05/12/fine-tuning-control-plane-access-with-cluster-api/</guid>
      <description>&lt;p&gt;When &lt;a href=&#34;https://cluster-api.sigs.k8s.io&#34;&gt;Cluster API&lt;/a&gt; creates a workload cluster, it also creates a load balancing solution to handle traffic to the workload cluster&amp;rsquo;s control plane. This is necessary so that the control plane endpoint is decoupled from the underlying control plane nodes (which facilitates scaling the control plane, among other things). On AWS, this mean creating an ELB and a set of security groups. For flexibility, Cluster API provides a limited ability to customize this control plane load balancer. In this post, I&amp;rsquo;ll show you how to use this functionality to fine-tune access to a workload cluster&amp;rsquo;s control plane when using Cluster API with AWS.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Kustomize Components with Cluster API</title>
      <link>https://www.howellyang.com/2021/11/01/using-kustomize-components-with-cluster-api/</link>
      <pubDate>Mon, 01 Nov 2021 10:00:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/11/01/using-kustomize-components-with-cluster-api/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;https://kustomize.io&#34;&gt;Kustomize&lt;/a&gt; with &lt;a href=&#34;https://cluster-api.sigs.k8s.io&#34;&gt;Cluster API&lt;/a&gt; (CAPI) to manage my AWS-based &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt; clusters for quite a while (along with &lt;a href=&#34;https://www.pulumi.com&#34;&gt;Pulumi&lt;/a&gt; for managing the underlying AWS infrastructure). For all the time I&amp;rsquo;ve been using this approach, I&amp;rsquo;ve also been unhappy with the overlay-based approach that had evolved as a way of managing multiple workload clusters. With the recent release of CAPI 1.0 and the v1beta1 API, I took this opportunity to see if there was a better way. I found a different way&amp;mdash;time will tell if it is a better way. In this post, I&amp;rsquo;ll share how I&amp;rsquo;m using Kustomize components to help streamline managing multiple CAPI workload clusters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 147</title>
      <link>https://www.howellyang.com/2021/10/29/technology-short-take-147/</link>
      <pubDate>Fri, 29 Oct 2021 09:00:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/10/29/technology-short-take-147/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #147! The list of articles is a bit shorter than usual this time around, but I&amp;rsquo;ve still got a good collection of articles and posts covering topics in networking, hardware (mostly focused on Apple&amp;rsquo;s processors), cloud computing, and virtualization. There&amp;rsquo;s bound to be something in here for most everyone! (At least, I hope so.) Enjoy your weekend reading!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Influencing Cluster API AMI Selection</title>
      <link>https://www.howellyang.com/2021/10/25/influencing-cluster-api-ami-selection/</link>
      <pubDate>Mon, 25 Oct 2021 09:45:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/10/25/influencing-cluster-api-ami-selection/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;Kubernetes Cluster API (CAPI) project&lt;/a&gt;&amp;mdash;which recently released v1.0&amp;mdash;can, if you wish, help manage the underlying infrastructure associated with a cluster. (You&amp;rsquo;re also fully able to have CAPI &lt;a href=&#34;https://cluster-api-aws.sigs.k8s.io/topics/consuming-existing-aws-infrastructure.html&#34;&gt;use existing infrastructure&lt;/a&gt; as well.) Speaking specifically of &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt;, this means that the &lt;a href=&#34;https://cluster-api-aws.sigs.k8s.io/&#34;&gt;Cluster API Provider for AWS&lt;/a&gt; is able to manage VPCs, subnets, routes and route tables, gateways, and&amp;mdash;of course&amp;mdash;EC2 instances. These EC2 instances are booted from a set of AMIs (Amazon Machine Images, definitely pronounced &amp;ldquo;ay-em-eye&amp;rdquo; with &lt;a href=&#34;https://blog.technodrone.cloud/2019/03/ami-has-3-syllables-ami-aws.html&#34;&gt;three syllables&lt;/a&gt;) that are prepared and maintained by the CAPI project. In this short and simple post, I&amp;rsquo;ll show you how to influence the AMI selection process that CAPI&amp;rsquo;s AWS provider uses.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kustomize Transformer Configurations for Cluster API v1beta1</title>
      <link>https://www.howellyang.com/2021/10/11/kustomize-transformer-configurations-for-cluster-api-v1beta1/</link>
      <pubDate>Mon, 11 Oct 2021 16:00:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/10/11/kustomize-transformer-configurations-for-cluster-api-v1beta1/</guid>
      <description>&lt;p&gt;The topic of combining &lt;a href=&#34;https://kustomize.io/&#34;&gt;&lt;code&gt;kustomize&lt;/code&gt;&lt;/a&gt; with &lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;Cluster API&lt;/a&gt; (CAPI) is a topic I&amp;rsquo;ve touched on several times over the last 18-24 months. I first touched on this topic in November 2019 with a post on &lt;a href=&#34;https://www.howellyang.com/2019/11/12/using-kustomize-with-cluster-api-manifests/&#34;&gt;using &lt;code&gt;kustomize&lt;/code&gt; with CAPI manifests&lt;/a&gt;. A short while later, I discovered a way to change the configurations for the &lt;code&gt;kustomize&lt;/code&gt; transformers to make it easier to use it with CAPI. That resulted in two posts on changing the &lt;code&gt;kustomize&lt;/code&gt; transformers: &lt;a href=&#34;https://www.howellyang.com/2020/03/13/configuring-kustomize-transformers-for-cluster-api/&#34;&gt;one for v1alpha2&lt;/a&gt; and &lt;a href=&#34;https://www.howellyang.com/2020/03/17/kustomize-transformer-configuration-cluster-api-v1alpha3/&#34;&gt;one for v1alpha3&lt;/a&gt; (since there were changes to the API between versions). In this post, I&amp;rsquo;ll revisit &lt;code&gt;kustomize&lt;/code&gt; transformer configurations again, this time for CAPI v1beta1 (the API version corresponding to the CAPI 1.0 release).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Cilium via a ClusterResourceSet</title>
      <link>https://www.howellyang.com/2021/10/07/installing-cilium-via-clusterresourceset/</link>
      <pubDate>Thu, 07 Oct 2021 10:00:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/10/07/installing-cilium-via-clusterresourceset/</guid>
      <description>&lt;p&gt;In this post, I&amp;rsquo;m going to walk you through how to install &lt;a href=&#34;https://cilium.io/&#34;&gt;Cilium&lt;/a&gt; onto a &lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;Cluster API&lt;/a&gt;-managed workload cluster using a ClusterResourceSet. It&amp;rsquo;s reasonable to consider this post a follow-up to my earlier post that walked you through &lt;a href=&#34;https://www.howellyang.com/2021/03/02/deploying-a-cni-automatically-with-a-clusterresourceset/&#34;&gt;using a ClusterResourceSet to install Calico&lt;/a&gt;. There&amp;rsquo;s no need to read the earlier post, though, as this post includes all the information (or links to the information) you need. Ready? Let&amp;rsquo;s jump in!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 143</title>
      <link>https://www.howellyang.com/2021/08/06/technology-short-take-143/</link>
      <pubDate>Fri, 06 Aug 2021 08:45:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/08/06/technology-short-take-143/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #143! I have what I think is an interesting list of links to share with you this time around. Since taking my new job at Kong, I&amp;rsquo;ve been spending more time with Envoy, so you&amp;rsquo;ll see some Envoy-related content showing up in this Technology Short Take. I hope this collection of links has something useful for you!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Adding Multiple Items Using Kustomize JSON 6902 Patches</title>
      <link>https://www.howellyang.com/2021/07/07/adding-multiple-items-using-kustomize-json-6902-patches/</link>
      <pubDate>Wed, 07 Jul 2021 17:50:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/07/07/adding-multiple-items-using-kustomize-json-6902-patches/</guid>
      <description>&lt;p&gt;Recently, I needed to deploy a &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt; cluster via &lt;a href=&#34;https://cluster-api.sigs.k8s.io&#34;&gt;Cluster API (CAPI)&lt;/a&gt; into a pre-existing AWS VPC. As I outlined in &lt;a href=&#34;https://www.howellyang.com/2019/09/09/consuming-preexisting-aws-infrastructure-with-cluster-api/&#34;&gt;this post&lt;/a&gt; from September 2019, this entails modifying the CAPI manifest to include the VPC ID and any associated subnet IDs, as well as &lt;a href=&#34;https://www.howellyang.com/2020/04/22/using-existing-aws-security-groups-with-cluster-api/&#34;&gt;referencing existing security groups&lt;/a&gt; where needed. I knew that I could use &lt;a href=&#34;https://kustomize.sigs.k8s.io/&#34;&gt;the &lt;code&gt;kustomize&lt;/code&gt; tool&lt;/a&gt; to make these changes in a declarative way, as I&amp;rsquo;d explored &lt;a href=&#34;https://www.howellyang.com/2019/11/12/using-kustomize-with-cluster-api-manifests/&#34;&gt;using &lt;code&gt;kustomize&lt;/code&gt; with Cluster API manifests&lt;/a&gt; some time ago. This time, though, I needed to add a list of items, not just modify an existing value. In this post, I&amp;rsquo;ll show you how I used a JSON 6902 patch with &lt;code&gt;kustomize&lt;/code&gt; to add a list of items to a CAPI manifest.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 141</title>
      <link>https://www.howellyang.com/2021/06/18/technology-short-take-141/</link>
      <pubDate>Fri, 18 Jun 2021 07:30:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/06/18/technology-short-take-141/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #141! This is the first Technology Short Take compiled, written, and published entirely on my M1-based MacBook Pro (see &lt;a href=&#34;https://www.howellyang.com/2021/06/02/review-2020-m1-based-macbook-pro/&#34;&gt;my review here&lt;/a&gt;). The collection of links shared below covers a fairly wide range of topics, from old Sun hardware to working with serverless frameworks in the public cloud. I hope that you find something useful here. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Adding a MachineHealthCheck using Kustomize</title>
      <link>https://www.howellyang.com/2021/03/19/adding-a-machinehealthcheck-with-kustomize/</link>
      <pubDate>Fri, 19 Mar 2021 08:45:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/03/19/adding-a-machinehealthcheck-with-kustomize/</guid>
      <description>&lt;p&gt;MachineHealthChecks are a powerful feature in the Kubernetes &lt;a href=&#34;https://cluster-api.sigs.k8s.io&#34;&gt;Cluster API&lt;/a&gt; (CAPI), and something I played around with not too long ago on &lt;a href=&#34;https://tgik.io/143&#34;&gt;TGIK 143&lt;/a&gt;. Recently, I was helping to document the use of &lt;a href=&#34;https://github.com/kubernetes-sigs/kustomize/&#34;&gt;&lt;code&gt;kustomize&lt;/code&gt;&lt;/a&gt; with Cluster API for inclusion in the upstream CAPI documentation, and I learned a simple trick with &lt;code&gt;kustomize&lt;/code&gt; that I&amp;rsquo;d apparently overlooked in the past. If you&amp;rsquo;ve used &lt;code&gt;kustomize&lt;/code&gt; for any great length of time you probably already know and have used the functionality I&amp;rsquo;ll describe in this post, but if you&amp;rsquo;re new to &lt;code&gt;kustomize&lt;/code&gt; or, like me, a user of &lt;code&gt;kustomize&lt;/code&gt; that hasn&amp;rsquo;t had time to dig into all of its functionality, then read on and see how you can use &lt;code&gt;kustomize&lt;/code&gt; to add a MachineHealthCheck to a CAPI workload cluster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploying a CNI Automatically with a ClusterResourceSet</title>
      <link>https://www.howellyang.com/2021/03/02/deploying-a-cni-automatically-with-a-clusterresourceset/</link>
      <pubDate>Tue, 02 Mar 2021 10:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2021/03/02/deploying-a-cni-automatically-with-a-clusterresourceset/</guid>
      <description>&lt;p&gt;Not too long ago I hosted &lt;a href=&#34;https://tgik.io/143&#34;&gt;an episode of TGIK8s&lt;/a&gt;, where I explored some features of &lt;a href=&#34;https://cluster-api.sigs.k8s.io&#34;&gt;Cluster API&lt;/a&gt;. One of the features I explored on the show was &lt;a href=&#34;https://cluster-api.sigs.k8s.io/tasks/experimental-features/cluster-resource-set.html&#34;&gt;ClusterResourceSet&lt;/a&gt;, an experimental feature that allows users to automatically install additional components onto workload clusters when the workload clusters are provisioned. In this post, I&amp;rsquo;ll show how to deploy a CNI plugin automatically using a ClusterResourceSet.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Velero to Protect Cluster API</title>
      <link>https://www.howellyang.com/2021/01/11/using-velero-to-protect-cluster-api/</link>
      <pubDate>Mon, 11 Jan 2021 10:25:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2021/01/11/using-velero-to-protect-cluster-api/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;Cluster API&lt;/a&gt; (also known as CAPI) is, as you may already know, an effort within the upstream &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; community to apply Kubernetes-style APIs to cluster lifecycle management&amp;mdash;in short, to use Kubernetes to manage the lifecycle of Kubernetes clusters. If you&amp;rsquo;re unfamiliar with CAPI, I&amp;rsquo;d encourage you to check out &lt;a href=&#34;https://www.howellyang.com/2019/08/26/an-introduction-to-kubernetes-cluster-api/&#34;&gt;my introduction to Cluster API&lt;/a&gt; before proceeding. In this post, I&amp;rsquo;m going to show you how to use &lt;a href=&#34;https://velero.io&#34;&gt;Velero&lt;/a&gt; (formerly Heptio Ark) to backup and restore Cluster API objects so as to protect your organization against an unrecoverable issue on your Cluster API management cluster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bootstrapping a Cluster API Management Cluster</title>
      <link>https://www.howellyang.com/2020/12/02/bootstrapping-a-cluster-api-management-cluster/</link>
      <pubDate>Wed, 02 Dec 2020 11:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/12/02/bootstrapping-a-cluster-api-management-cluster/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;Cluster API&lt;/a&gt; is, if you&amp;rsquo;re not already familiar, an effort to bring declarative &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;-style APIs to Kubernetes cluster lifecycle management. (I encourage you to check out &lt;a href=&#34;https://www.howellyang.com/2019/08/26/an-introduction-to-kubernetes-cluster-api/&#34;&gt;my introduction to Cluster API post&lt;/a&gt; if you&amp;rsquo;re new to Cluster API.) Given that it is using Kubernetes-style APIs to manage Kubernetes clusters, there must be a &lt;em&gt;management cluster&lt;/em&gt; with the Cluster API components installed. But how does one establish that management cluster? This is a question I&amp;rsquo;ve seen pop up several times in &lt;a href=&#34;https://kubernetes.slack.com/&#34;&gt;the Kubernetes Slack community&lt;/a&gt;. In this post, I&amp;rsquo;ll walk you through one way of bootstrapping a Cluster API management cluster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pausing Cluster API Reconciliation</title>
      <link>https://www.howellyang.com/2020/11/25/pausing-cluster-api-reconciliation/</link>
      <pubDate>Wed, 25 Nov 2020 10:45:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/11/25/pausing-cluster-api-reconciliation/</guid>
      <description>&lt;p&gt;Cluster API is a topic I&amp;rsquo;ve discussed here in a number of posts. If you&amp;rsquo;re not already familiar with Cluster API (also known as CAPI), I&amp;rsquo;d encourage you to check out &lt;a href=&#34;https://www.howellyang.com/2019/08/26/an-introduction-to-kubernetes-cluster-api/&#34;&gt;my introductory post on Cluster API&lt;/a&gt; first; you can also visit &lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;the official Cluster API site&lt;/a&gt; for more details. In this short post, I&amp;rsquo;m going to show you how to pause the reconciliation of Cluster API cluster objects, a task that may be necessary for a variety of reasons (including backing up the Cluster API objects in your management cluster).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Considerations for using IaC with Cluster API</title>
      <link>https://www.howellyang.com/2020/10/08/considerations-for-using-iac-with-cluster-api/</link>
      <pubDate>Thu, 08 Oct 2020 08:50:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/10/08/considerations-for-using-iac-with-cluster-api/</guid>
      <description>&lt;p&gt;In other posts on this site, I&amp;rsquo;ve talked about both infrastructure-as-code (see &lt;a href=&#34;https://www.howellyang.com/tags/terraform&#34;&gt;my posts on Terraform&lt;/a&gt; or &lt;a href=&#34;https://www.howellyang.com/tags/pulumi&#34;&gt;my posts on Pulumi&lt;/a&gt;) and somewhat separately I&amp;rsquo;ve talked about Cluster API (see &lt;a href=&#34;https://www.howellyang.com/tags/capi&#34;&gt;my posts on Cluster API&lt;/a&gt;). And while I&amp;rsquo;ve discussed the idea of &lt;a href=&#34;https://www.howellyang.com/2019/09/09/consuming-preexisting-aws-infrastructure-with-cluster-api/&#34;&gt;using existing AWS infrastructure with Cluster API&lt;/a&gt;, in this post I wanted to try to think about how these two technologies play together, and provide some considerations for using them together.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
