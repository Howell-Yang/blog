<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/json/</link>
    <description>Recent content in JSON on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 May 2022 08:45:00 -0600</lastBuildDate><atom:link href="https://www.howellyang.com/tags/json/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Technology Short Take 155</title>
      <link>https://www.howellyang.com/2022/05/27/technology-short-take-155/</link>
      <pubDate>Fri, 27 May 2022 08:45:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2022/05/27/technology-short-take-155/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #155, just in time for the 2022 Memorial Day holiday weekend! (Here in the US, at least.) I mean, don&amp;rsquo;t you want to spend this weekend catching up on some technology-related articles instead of cooking on the grill and gathering with friends and family? I certainly hope not! Still, for those who need a little technology fix over the weekend, hopefully I&amp;rsquo;ve included something useful in the list of articles below. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 153</title>
      <link>https://www.howellyang.com/2022/04/15/technology-short-take-153/</link>
      <pubDate>Fri, 15 Apr 2022 08:45:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2022/04/15/technology-short-take-153/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #153! My personal and professional life has kept me busy over the last couple of months, so things have been quiet here on the blog. I&amp;rsquo;ve still been collecting links to share with you, though, and here&amp;rsquo;s the latest collection. I hope you&amp;rsquo;re able to find something useful here!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 144</title>
      <link>https://www.howellyang.com/2021/08/27/technology-short-take-144/</link>
      <pubDate>Fri, 27 Aug 2021 07:00:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/08/27/technology-short-take-144/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #144! I have a fairly diverse set of links for readers this time around, covering topics from microchips to improving your writing, with stops along the way in topics like Kubernetes, virtualization, Linux, and the popular JSON-parsing tool &lt;code&gt;jq&lt;/code&gt;. I hope you find something useful!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using the AWS CLI to Tag Groups of AWS Resources</title>
      <link>https://www.howellyang.com/2021/08/23/using-aws-cli-tag-groups-of-aws-resources/</link>
      <pubDate>Mon, 23 Aug 2021 12:20:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/08/23/using-aws-cli-tag-groups-of-aws-resources/</guid>
      <description>&lt;p&gt;To conduct some testing, I recently needed to spin up a group of &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; clusters on AWS. Generally speaking, my &amp;ldquo;weapon of choice&amp;rdquo; for something like this is &lt;a href=&#34;https://cluster-api.sigs.k8s.io/&#34;&gt;Cluster API (CAPI)&lt;/a&gt; with the AWS provider. Normally this would be enormously simple. In this particular case&amp;mdash;for reasons that I won&amp;rsquo;t bother going into here&amp;mdash;I needed to spin up all these clusters in a single VPC. This presents a problem for the &lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api-provider-aws/&#34;&gt;Cluster API Provider for AWS (CAPA)&lt;/a&gt;, as it currently doesn&amp;rsquo;t add some required tags to existing AWS infrastructure (see &lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api-provider-aws/issues/2584&#34;&gt;this issue&lt;/a&gt;). The fix is to add the tags manually, so in this post I&amp;rsquo;ll share how I used the AWS CLI to add the necessary tags.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Adding Multiple Items Using Kustomize JSON 6902 Patches</title>
      <link>https://www.howellyang.com/2021/07/07/adding-multiple-items-using-kustomize-json-6902-patches/</link>
      <pubDate>Wed, 07 Jul 2021 17:50:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/07/07/adding-multiple-items-using-kustomize-json-6902-patches/</guid>
      <description>&lt;p&gt;Recently, I needed to deploy a &lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt; cluster via &lt;a href=&#34;https://cluster-api.sigs.k8s.io&#34;&gt;Cluster API (CAPI)&lt;/a&gt; into a pre-existing AWS VPC. As I outlined in &lt;a href=&#34;https://www.howellyang.com/2019/09/09/consuming-preexisting-aws-infrastructure-with-cluster-api/&#34;&gt;this post&lt;/a&gt; from September 2019, this entails modifying the CAPI manifest to include the VPC ID and any associated subnet IDs, as well as &lt;a href=&#34;https://www.howellyang.com/2020/04/22/using-existing-aws-security-groups-with-cluster-api/&#34;&gt;referencing existing security groups&lt;/a&gt; where needed. I knew that I could use &lt;a href=&#34;https://kustomize.sigs.k8s.io/&#34;&gt;the &lt;code&gt;kustomize&lt;/code&gt; tool&lt;/a&gt; to make these changes in a declarative way, as I&amp;rsquo;d explored &lt;a href=&#34;https://www.howellyang.com/2019/11/12/using-kustomize-with-cluster-api-manifests/&#34;&gt;using &lt;code&gt;kustomize&lt;/code&gt; with Cluster API manifests&lt;/a&gt; some time ago. This time, though, I needed to add a list of items, not just modify an existing value. In this post, I&amp;rsquo;ll show you how I used a JSON 6902 patch with &lt;code&gt;kustomize&lt;/code&gt; to add a list of items to a CAPI manifest.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 140</title>
      <link>https://www.howellyang.com/2021/05/07/technology-short-take-140/</link>
      <pubDate>Fri, 07 May 2021 09:15:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/05/07/technology-short-take-140/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #140! It&amp;rsquo;s hard to believe it&amp;rsquo;s already the start of May 2021&amp;mdash;my how time flies! In this Technology Short Take, I&amp;rsquo;ve gathered some links for you covering topics like Azure and AWS networking, moving from macOS to Linux (and back again), and more. Let&amp;rsquo;s jump right into the content!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 132</title>
      <link>https://www.howellyang.com/2020/10/23/technology-short-take-132/</link>
      <pubDate>Fri, 23 Oct 2020 15:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/10/23/technology-short-take-132/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #132! My list of links and articles from around the web seems to be a bit heavy on security-related topics this time. Still, there&amp;rsquo;s a decent collection of networking, cloud computing, and virtualization articles as well as a smattering of other topics for you to peruse. I hope you find something useful!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Technology Short Take 130</title>
      <link>https://www.howellyang.com/2020/08/21/technology-short-take-130/</link>
      <pubDate>Fri, 21 Aug 2020 09:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/08/21/technology-short-take-130/</guid>
      <description>&lt;p&gt;Welcome to Technology Short Take #130! I&amp;rsquo;ve had this blog post sitting in my Drafts folder waiting to be published for almost a month, and I kept forgetting to actually make it live. Sorry! So, here it is&amp;mdash;better late than never, right?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Modifying Visual Studio Code&#39;s Bracketing Behavior</title>
      <link>https://www.howellyang.com/2020/03/08/modifying-visual-studio-code-bracketing-behavior/</link>
      <pubDate>Sun, 08 Mar 2020 17:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/03/08/modifying-visual-studio-code-bracketing-behavior/</guid>
      <description>&lt;p&gt;There are two things I&amp;rsquo;ve missed since I switched from &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt; to &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; (I switched in 2018). First, the &lt;em&gt;speed.&lt;/em&gt; Sublime Text is &lt;em&gt;so&lt;/em&gt; much faster than Visual Studio Code; it&amp;rsquo;s insane. But, the team behind Visual Studio Code is working hard to improve performance, so I&amp;rsquo;ve mostly resigned myself to it. The second thing, though, was the behavior of wrapping selected text in brackets (or parentheses, curly braces, quotes, etc.). That part has annoyed me for two years, until this past weekend I&amp;rsquo;d finally had enough. Here&amp;rsquo;s how I modified Visual Studio Code&amp;rsquo;s bracketing behaviors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thinking and Learning About API Design</title>
      <link>https://www.howellyang.com/2020/01/24/thinking-and-learning-about-api-design/</link>
      <pubDate>Fri, 24 Jan 2020 15:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/01/24/thinking-and-learning-about-api-design/</guid>
      <description>&lt;p&gt;In July of 2018 I talked about &lt;a href=&#34;https://github.com/scottslowe/polyglot&#34;&gt;Polyglot&lt;/a&gt;, a very simple project I&amp;rsquo;d launched whose &lt;em&gt;only&lt;/em&gt; purpose was simply to &lt;a href=&#34;https://www.howellyang.com/2018/07/23/bolstering-my-software-development-skills/&#34;&gt;bolster my software development skills&lt;/a&gt;. Work on Polyglot has been sporadic at best, coming in fits and spurts, and thus far focused on building a model for the APIs that would be found in the project. Since I am not a software engineer by training (I have no formal training in software development), all of this is new to me, and I&amp;rsquo;ve found myself encountering lots of questions about API design along the way. In the interest of helping others who may be in a similar situation, I thought I&amp;rsquo;d share a bit here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Decoding a Kubernetes Service Account Token</title>
      <link>https://www.howellyang.com/2019/07/31/decoding-a-kubernetes-service-account-token/</link>
      <pubDate>Wed, 31 Jul 2019 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2019/07/31/decoding-a-kubernetes-service-account-token/</guid>
      <description>&lt;p&gt;Recently, while troubleshooting a separate issue, I had a need to get more information about the token used by Kubernetes Service Accounts. In this post, I&amp;rsquo;ll share a quick command-line that can fully decode a Service Account token.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building Jsonnet from Source</title>
      <link>https://www.howellyang.com/2019/07/07/building-jsonnet-from-source/</link>
      <pubDate>Sun, 07 Jul 2019 23:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2019/07/07/building-jsonnet-from-source/</guid>
      <description>&lt;p&gt;I recently decided to start working with &lt;code&gt;jsonnet&lt;/code&gt;, a data templating language and associated command-line interface (CLI) tool for manipulating and/or generating various data formats (like JSON, YAML, or other formats; see &lt;a href=&#34;https://jsonnet.org/&#34;&gt;the Jsonnet web site&lt;/a&gt; for more information). However, I found that there are no prebuilt binaries for &lt;code&gt;jsonnet&lt;/code&gt; (at least, not that I could find), and so I thought I&amp;rsquo;d share here the process for building &lt;code&gt;jsonnet&lt;/code&gt; from source. It&amp;rsquo;s not hard or complicated, but hopefully sharing this information will streamline the process for others.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Advanced AMI Filtering with JMESPath</title>
      <link>https://www.howellyang.com/2019/03/01/advanced-ami-filtering-with-jmespath/</link>
      <pubDate>Fri, 01 Mar 2019 21:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2019/03/01/advanced-ami-filtering-with-jmespath/</guid>
      <description>&lt;p&gt;I recently had a need to do some &amp;ldquo;advanced&amp;rdquo; filtering of AMIs returned by the AWS CLI. I&amp;rsquo;d already mastered the use of the &lt;code&gt;--filters&lt;/code&gt; parameter, which let me greatly reduce the number of AMIs returned by &lt;code&gt;aws ec2 describe-images&lt;/code&gt;. In many cases, using filters alone got me what I needed. In one case, however, I needed to be even more selective in returning results, and this lead me to some (slightly more) complex &lt;a href=&#34;http://jmespath.org/&#34;&gt;JMESPath&lt;/a&gt; queries than I&amp;rsquo;d used before. I wanted to share them here for the benefit of my readers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cloning All Repositories in a GitHub Organization</title>
      <link>https://www.howellyang.com/2018/07/19/cloning-all-repositories-in-a-github-organization/</link>
      <pubDate>Thu, 19 Jul 2018 17:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/07/19/cloning-all-repositories-in-a-github-organization/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently started playing around with &lt;a href=&#34;https://ballerina.io/&#34;&gt;Ballerina&lt;/a&gt;, and upon the suggestion of some folks on Twitter wanted to clone down some of the &amp;ldquo;official&amp;rdquo; Ballerina GitHub repositories to provide code examples and guides that would assist in my learning. Upon attempting to do so, however, I found myself needing to clone down 39 different repositories (all under a single organization), and so I asked on Twitter if there was an easy way to do this. Here&amp;rsquo;s what I found.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>More Handy CLI Tools for JSON</title>
      <link>https://www.howellyang.com/2018/06/28/more-handy-cli-tools-json/</link>
      <pubDate>Thu, 28 Jun 2018 08:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/06/28/more-handy-cli-tools-json/</guid>
      <description>&lt;p&gt;In late 2015 I wrote &lt;a href=&#34;https://www.howellyang.com/2015/11/11/handy-cli-tool-json/&#34;&gt;a post about a command-line tool named &lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;, which is used for parsing JSON data. Since that time I&amp;rsquo;ve referenced &lt;code&gt;jq&lt;/code&gt; in a number of different blog posts (like &lt;a href=&#34;https://www.howellyang.com/2018/05/23/quick-post-parsing-aws-instance-data-with-jq/&#34;&gt;this one&lt;/a&gt;). However, &lt;code&gt;jq&lt;/code&gt; is not the only game in town for parsing JSON data at the command line. In this post, I&amp;rsquo;ll share a couple more handy CLI tools for working with JSON data.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
