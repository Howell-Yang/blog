<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/development/</link>
    <description>Recent content in Development on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jan 2020 15:00:00 -0700</lastBuildDate><atom:link href="https://www.howellyang.com/tags/development/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thinking and Learning About API Design</title>
      <link>https://www.howellyang.com/2020/01/24/thinking-and-learning-about-api-design/</link>
      <pubDate>Fri, 24 Jan 2020 15:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/01/24/thinking-and-learning-about-api-design/</guid>
      <description>&lt;p&gt;In July of 2018 I talked about &lt;a href=&#34;https://github.com/scottslowe/polyglot&#34;&gt;Polyglot&lt;/a&gt;, a very simple project I&amp;rsquo;d launched whose &lt;em&gt;only&lt;/em&gt; purpose was simply to &lt;a href=&#34;https://www.howellyang.com/2018/07/23/bolstering-my-software-development-skills/&#34;&gt;bolster my software development skills&lt;/a&gt;. Work on Polyglot has been sporadic at best, coming in fits and spurts, and thus far focused on building a model for the APIs that would be found in the project. Since I am not a software engineer by training (I have no formal training in software development), all of this is new to me, and I&amp;rsquo;ve found myself encountering lots of questions about API design along the way. In the interest of helping others who may be in a similar situation, I thought I&amp;rsquo;d share a bit here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Looking Back: 2019 Project Report Card</title>
      <link>https://www.howellyang.com/2020/01/01/looking-back-2019-project-report-card/</link>
      <pubDate>Wed, 01 Jan 2020 08:43:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/01/01/looking-back-2019-project-report-card/</guid>
      <description>&lt;p&gt;As has been my custom over the last five years or so, in the early part of the year I like to share with my readers a list of personal projects for the upcoming year (here&amp;rsquo;s &lt;a href=&#34;https://www.howellyang.com/2019/03/15/looking-ahead-2019-projects/&#34;&gt;the 2019 list&lt;/a&gt;). Then, near the end of that same year or very early in the following year, I evaluate how I performed against that list of personal projects (for example, here&amp;rsquo;s &lt;a href=&#34;https://www.howellyang.com/2018/12/28/looking-back-2018-project-report-card/&#34;&gt;my project report card for 2018&lt;/a&gt;). In this post, I&amp;rsquo;ll continue that pattern with an evaluation of my progress against my 2019 project list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Looking Ahead: My 2019 Projects</title>
      <link>https://www.howellyang.com/2019/03/15/looking-ahead-2019-projects/</link>
      <pubDate>Fri, 15 Mar 2019 22:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2019/03/15/looking-ahead-2019-projects/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a little while now since I published &lt;a href=&#34;https://www.howellyang.com/2018/12/28/looking-back-2018-project-report-card/&#34;&gt;my 2018 project report card&lt;/a&gt;, which assessed my progress against &lt;a href=&#34;https://www.howellyang.com/2018/03/05/looking-ahead-2018-projects/&#34;&gt;my 2018 project goals&lt;/a&gt;. I&amp;rsquo;ve been giving a fair amount of thought to the areas where I&amp;rsquo;d like to focus my professional (technical) development this coming year, and I think I&amp;rsquo;ve come up with some project goals that align both with where I am professionally right now and where I want to be technically as I grow and evolve. This is a really difficult balance to strike, and we&amp;rsquo;ll see at the end of the year how well I did.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On Thinking About Infrastructure as Code</title>
      <link>https://www.howellyang.com/2018/12/31/on-thinking-about-infrastructure-as-code/</link>
      <pubDate>Mon, 31 Dec 2018 11:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/12/31/on-thinking-about-infrastructure-as-code/</guid>
      <description>&lt;p&gt;I just finished reading Cindy Sridharan&amp;rsquo;s excellent post titled &amp;ldquo;&lt;a href=&#34;https://medium.com/@copyconstruct/effective-mental-models-for-code-and-systems-7c55918f1b3e&#34;&gt;Effective Mental Models for Code and Systems&lt;/a&gt;,&amp;rdquo; and some of the points Sridharan makes immediately jumped out to me&amp;mdash;not for &amp;ldquo;traditional&amp;rdquo; code development, but for the development of infrastructure as code. Take a few minutes to go read the post&amp;mdash;seriously, it&amp;rsquo;s &lt;em&gt;really&lt;/em&gt; good. Done reading it? Good, now we can proceed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Looking Back: 2018 Project Report Card</title>
      <link>https://www.howellyang.com/2018/12/28/looking-back-2018-project-report-card/</link>
      <pubDate>Fri, 28 Dec 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/12/28/looking-back-2018-project-report-card/</guid>
      <description>&lt;p&gt;Over the last five years or so, I&amp;rsquo;ve shared with my readers an annual list of projects along with&amp;mdash;at the year&amp;rsquo;s end&amp;mdash;a &amp;ldquo;project report card&amp;rdquo; on how I fared against the projects I&amp;rsquo;d set for myself. (For example, here&amp;rsquo;s &lt;a href=&#34;https://www.howellyang.com/2018/01/03/looking-back-2017-project-report-card/&#34;&gt;my project report card for 2017&lt;/a&gt;.) Following that same pattern, then, here is my project report card for 2018.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Validating RAML Files Using Docker</title>
      <link>https://www.howellyang.com/2018/10/20/validating-raml-files-using-docker/</link>
      <pubDate>Sat, 20 Oct 2018 14:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/10/20/validating-raml-files-using-docker/</guid>
      <description>&lt;p&gt;Back in July of this year I &lt;a href=&#34;https://www.howellyang.com/2018/07/23/bolstering-my-software-development-skills/&#34;&gt;introduced Polyglot&lt;/a&gt;, a project whose only purpose is to provide a means for me to learn more about software development and programming (areas where am I sorely lacking real knowledge). In the limited spare time I&amp;rsquo;ve had to work on Polyglot in the ensuing months, I&amp;rsquo;ve been building out an API specification using &lt;a href=&#34;https://raml.org/&#34;&gt;RAML&lt;/a&gt;, and in this post I&amp;rsquo;ll share how I use &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; and a Docker image to validate my RAML files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Book Review: REST API Design Rulebook</title>
      <link>https://www.howellyang.com/2018/09/04/book-review-rest-api-design-rulebook/</link>
      <pubDate>Tue, 04 Sep 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/09/04/book-review-rest-api-design-rulebook/</guid>
      <description>&lt;p&gt;&lt;em&gt;REST API Design Rulebook&lt;/em&gt; (written by Mark Masse and published by O&amp;rsquo;Reilly Media; more details &lt;a href=&#34;http://shop.oreilly.com/product/0636920021575.do&#34;&gt;here&lt;/a&gt;) is an older book, published in late 2011. However, having never attempted to design a REST API before, I found lots of useful information inside that really helped shape my understanding of REST APIs and REST API design.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bolstering my Software Development Skills</title>
      <link>https://www.howellyang.com/2018/07/23/bolstering-my-software-development-skills/</link>
      <pubDate>Mon, 23 Jul 2018 08:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/07/23/bolstering-my-software-development-skills/</guid>
      <description>&lt;p&gt;I recently &lt;a href=&#34;https://twitter.com/scott_lowe/status/1019743197105229824&#34;&gt;tweeted&lt;/a&gt; that I was about to undertake a new pet project where I was, in my words, &amp;ldquo;probably going to fall flat on my face&amp;rdquo;. Later, &lt;a href=&#34;https://twitter.com/scott_lowe/status/1020776898870181888&#34;&gt;I asked on Twitter&lt;/a&gt; if I should share some of the learning that will occur (is ocurring) as a result of this new project, and a number of folks indicated that I should. So, with that in mind, I&amp;rsquo;m announcing this project I&amp;rsquo;ve undertaken is a software development project aimed at helping me bolster my software development skills, and that I&amp;rsquo;ll be blogging about it along the way so that others can benefit from my mistakes&amp;hellip;er, learning.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cloning All Repositories in a GitHub Organization</title>
      <link>https://www.howellyang.com/2018/07/19/cloning-all-repositories-in-a-github-organization/</link>
      <pubDate>Thu, 19 Jul 2018 17:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/07/19/cloning-all-repositories-in-a-github-organization/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently started playing around with &lt;a href=&#34;https://ballerina.io/&#34;&gt;Ballerina&lt;/a&gt;, and upon the suggestion of some folks on Twitter wanted to clone down some of the &amp;ldquo;official&amp;rdquo; Ballerina GitHub repositories to provide code examples and guides that would assist in my learning. Upon attempting to do so, however, I found myself needing to clone down 39 different repositories (all under a single organization), and so I asked on Twitter if there was an easy way to do this. Here&amp;rsquo;s what I found.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Book Review: Infrastructure as Code</title>
      <link>https://www.howellyang.com/2018/05/31/book-review-infrastructure-as-code/</link>
      <pubDate>Thu, 31 May 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/05/31/book-review-infrastructure-as-code/</guid>
      <description>&lt;p&gt;As part of &lt;a href=&#34;https://www.howellyang.com/2018/03/05/looking-ahead-2018-projects/&#34;&gt;my 2018 projects&lt;/a&gt;, I committed to reading and reviewing more technical books this year. As part of that effort, I recently finished reading &lt;em&gt;Infrastructure as Code&lt;/em&gt;, authored by Kief Morris and published in September 2015 by O&amp;rsquo;Reilly (more details &lt;a href=&#34;http://shop.oreilly.com/product/0636920039297.do&#34;&gt;here&lt;/a&gt;). Infrastructure as code is very relevant to my current job function and is an area of great personal interest, and I&amp;rsquo;d been half-heartedly working my way through the book for some time. Now that I&amp;rsquo;ve completed it, here are my thoughts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Checking Out GitHub Pull Requests Locally</title>
      <link>https://www.howellyang.com/2015/09/04/checking-out-github-pull-requests-locally/</link>
      <pubDate>Fri, 04 Sep 2015 13:40:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/09/04/checking-out-github-pull-requests-locally/</guid>
      <description>In this post, I&amp;rsquo;m going to show you how to use the Git command-line to check out GitHub pull requests locally. I take absolutely no credit for this trick! I picked this up from this GitHub Gist, and merely wanted to share it here so that others would benefit.
The GitHub gist shows you how to modify the Git configuration for a particular repository so that when you run git fetch it will fetch all the pull requests for that repository as well.</description>
    </item>
    
    <item>
      <title>Using the Fork-and-Branch Git Workflow</title>
      <link>https://www.howellyang.com/2015/01/27/using-fork-branch-git-workflow/</link>
      <pubDate>Tue, 27 Jan 2015 13:40:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/01/27/using-fork-branch-git-workflow/</guid>
      <description>Now that I&amp;rsquo;ve provided you with an introduction to Git and a brief overview of using Git with GitHub, it&amp;rsquo;s time to build on that knowledge by taking a closer look at one workflow often used when collaborating with Git. The &amp;ldquo;fork and branch&amp;rdquo; workflow is a common way of collaborating on open source projects using Git and GitHub. In this post, I&amp;rsquo;m going to walk through this workflow (as I understand it&amp;mdash;I&amp;rsquo;m constantly learning), with a focus toward helping those that are new to this sort of thing.</description>
    </item>
    
    <item>
      <title>Using Git with GitHub</title>
      <link>https://www.howellyang.com/2015/01/26/using-git-with-github/</link>
      <pubDate>Mon, 26 Jan 2015 12:01:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/01/26/using-git-with-github/</guid>
      <description>Building on my earlier non-programmer&amp;rsquo;s introduction to Git, I wanted to talk a little bit about using Git with GitHub, a very popular service for hosting Git repositories. This post, in conjunction with the earlier introductory post on Git, will serve as the basis for a future post that talks about how to use Git and GitHub to collaborate with others on an open source project hosted on GitHub.
If you aren&amp;rsquo;t familiar with Git and haven&amp;rsquo;t yet read the earlier introductory post, I strongly recommend reading that post first.</description>
    </item>
    
    <item>
      <title>A Non-Programmer&#39;s Introduction to Git</title>
      <link>https://www.howellyang.com/2015/01/14/non-programmer-git-intro/</link>
      <pubDate>Wed, 14 Jan 2015 09:10:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/01/14/non-programmer-git-intro/</guid>
      <description>Git is a distributed version control system that is widely used by a number of open source projects. In this post, I&amp;rsquo;m going to provide a quick non-programmer&amp;rsquo;s introduction to Git, and encourage readers to spend some time getting familiar with Git. I think it is a time investment that will pay off down the road.
First, I&amp;rsquo;m going to provide some definitions/brief explanations in order to establish a foundation upon which you can build your Git knowledge.</description>
    </item>
    
  </channel>
</rss>
