<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Scott&#39;s Weblog</title>
    <link>https://www.howellyang.com/tags/web/</link>
    <description>Recent content in Web on Scott&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Apr 2021 16:15:00 -0600</lastBuildDate><atom:link href="https://www.howellyang.com/tags/web/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Making Firefox on Linux use Private Browsing by Default</title>
      <link>https://www.howellyang.com/2021/04/13/making-firefox-on-linux-use-private-browsing-by-default/</link>
      <pubDate>Tue, 13 Apr 2021 16:15:00 -0600</pubDate>
      
      <guid>https://www.howellyang.com/2021/04/13/making-firefox-on-linux-use-private-browsing-by-default/</guid>
      <description>&lt;p&gt;While there are a couple different methods to make &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/products/&#34;&gt;Firefox&lt;/a&gt; use private browsing by default (see &lt;a href=&#34;https://ccm.net/faq/15012-how-to-start-firefox-in-private-mode-by-default&#34;&gt;this page&lt;/a&gt; for a couple methods), these methods essentially &lt;em&gt;force&lt;/em&gt; private browsing and disable the ability to use &amp;ldquo;regular&amp;rdquo; (non-private) browsing. In this post, I&amp;rsquo;ll describe what I consider to be a better way of achieving this, at least on Linux.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Thinking and Learning About API Design</title>
      <link>https://www.howellyang.com/2020/01/24/thinking-and-learning-about-api-design/</link>
      <pubDate>Fri, 24 Jan 2020 15:00:00 -0700</pubDate>
      
      <guid>https://www.howellyang.com/2020/01/24/thinking-and-learning-about-api-design/</guid>
      <description>&lt;p&gt;In July of 2018 I talked about &lt;a href=&#34;https://github.com/scottslowe/polyglot&#34;&gt;Polyglot&lt;/a&gt;, a very simple project I&amp;rsquo;d launched whose &lt;em&gt;only&lt;/em&gt; purpose was simply to &lt;a href=&#34;https://www.howellyang.com/2018/07/23/bolstering-my-software-development-skills/&#34;&gt;bolster my software development skills&lt;/a&gt;. Work on Polyglot has been sporadic at best, coming in fits and spurts, and thus far focused on building a model for the APIs that would be found in the project. Since I am not a software engineer by training (I have no formal training in software development), all of this is new to me, and I&amp;rsquo;ve found myself encountering lots of questions about API design along the way. In the interest of helping others who may be in a similar situation, I thought I&amp;rsquo;d share a bit here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Book Review: REST API Design Rulebook</title>
      <link>https://www.howellyang.com/2018/09/04/book-review-rest-api-design-rulebook/</link>
      <pubDate>Tue, 04 Sep 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/09/04/book-review-rest-api-design-rulebook/</guid>
      <description>&lt;p&gt;&lt;em&gt;REST API Design Rulebook&lt;/em&gt; (written by Mark Masse and published by O&amp;rsquo;Reilly Media; more details &lt;a href=&#34;http://shop.oreilly.com/product/0636920021575.do&#34;&gt;here&lt;/a&gt;) is an older book, published in late 2011. However, having never attempted to design a REST API before, I found lots of useful information inside that really helped shape my understanding of REST APIs and REST API design.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Manually Installing Firefox 60 on Fedora 27</title>
      <link>https://www.howellyang.com/2018/05/15/manually-installing-firefox-60-on-fedora-27/</link>
      <pubDate>Tue, 15 May 2018 12:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2018/05/15/manually-installing-firefox-60-on-fedora-27/</guid>
      <description>&lt;p&gt;Mozilla recently released version 60 of &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/&#34;&gt;Firefox&lt;/a&gt;, which contains a number of pretty important enhancements (as outlined &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/60.0/releasenotes/&#34;&gt;here&lt;/a&gt;). However, the &lt;a href=&#34;https://getfedora.org/&#34;&gt;Fedora&lt;/a&gt; repositories don&amp;rsquo;t (yet) contain Firefox 60 (at least not for Fedora 27), so you can&amp;rsquo;t just do a &lt;code&gt;dnf update&lt;/code&gt; to get the latest release. With that in mind, here are some instructions for manually installing Firefox 60 on Fedora 27.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Handy GUI Tool for Working with APIs</title>
      <link>https://www.howellyang.com/2015/11/14/handy-gui-tool-working-apis/</link>
      <pubDate>Sat, 14 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2015/11/14/handy-gui-tool-working-apis/</guid>
      <description>In this post I&amp;rsquo;m going to share with you an OS X graphical application I found that makes it easier to work with RESTful APIs. The topic of RESTful APIs has come up here before (see this post on using cURL to interact with RESTful APIs), and RESTful APIs have been a key part of a number of other posts (like my recent post on using jq to work with JSON).</description>
    </item>
    
    <item>
      <title>Using Curl to Interact with a RESTful API</title>
      <link>https://www.howellyang.com/2014/02/19/using-curl-to-interact-with-a-restful-api/</link>
      <pubDate>Wed, 19 Feb 2014 16:54:04 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2014/02/19/using-curl-to-interact-with-a-restful-api/</guid>
      <description>It seems as if APIs are popping up everywhere these days. While this isn&amp;rsquo;t a bad thing, it does mean that IT professionals need to have a better understanding of how to interact with these APIs. In this post, I&amp;rsquo;m going to discuss how to use the popular command line utility curl to interact with a couple of RESTful APIs&amp;mdash;specifically, the OpenStack APIs and the VMware NSX API.
Before I go any further, I want to note that to work with the OpenStack and VMware NSX APIs you&amp;rsquo;ll be sending and receiving information in JSON (JavaScript Object Notation).</description>
    </item>
    
    <item>
      <title>Divorcing Google</title>
      <link>https://www.howellyang.com/2013/12/04/divorcing-google/</link>
      <pubDate>Wed, 04 Dec 2013 09:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/12/04/divorcing-google/</guid>
      <description>The time has come; all good things must come to an end. So it is with my relationship with Google and the majority of their online services. As of right now, I&amp;rsquo;m in the midst of separating myself from the majority of Google&amp;rsquo;s services. I&amp;rsquo;ve mentioned this several times on Twitter, and a number of people asked me to write about the process. So, here are the details so far.</description>
    </item>
    
    <item>
      <title>Making JSON Output More Readable with BBEdit</title>
      <link>https://www.howellyang.com/2013/11/11/making-json-output-more-readable-with-bbedit/</link>
      <pubDate>Mon, 11 Nov 2013 09:00:00 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/11/11/making-json-output-more-readable-with-bbedit/</guid>
      <description>In this post I&amp;rsquo;m going to show you how to make JSON (JavaScript Object Notation) output more readable using a BBEdit Text Filter. This post comes out of some recent work I&amp;rsquo;ve done in learning how to interact with various REST APIs. My initial REST API explorations have focused on the NVP/NSX API, but I plan to soon expand my explorations to include other APIs, like OpenStack.
&amp;lt;aside&amp;gt;You might be wondering why I&amp;rsquo;m exploring REST APIs and stuff like JSON.</description>
    </item>
    
    <item>
      <title>A Non-Programmer&#39;s Introduction to JSON</title>
      <link>https://www.howellyang.com/2013/11/08/a-non-programmers-introduction-to-json/</link>
      <pubDate>Fri, 08 Nov 2013 09:11:50 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2013/11/08/a-non-programmers-introduction-to-json/</guid>
      <description>As part of some work I&amp;rsquo;ve been doing to stretch myself and my boundaries, I&amp;rsquo;ve recently started diving a bit deeper into working with REST APIs. As I started this exploration, one thing that kept coming up again and again was JSON. In this post, I&amp;rsquo;m going to try to provide an introduction to JSON for non-programmers (like me).
Let&amp;rsquo;s start with the acronym: &amp;ldquo;JSON&amp;rdquo; stands for &amp;ldquo;JavaScript Object Notation&amp;rdquo;. It&amp;rsquo;s a lightweight, text-based format, and is frequently used in conjunction with REST APIs and web-based services.</description>
    </item>
    
    <item>
      <title>Killing Ads in RSS Feeds in Vienna</title>
      <link>https://www.howellyang.com/2012/04/03/killing-ads-in-rss-feeds-in-vienna/</link>
      <pubDate>Tue, 03 Apr 2012 22:02:40 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2012/04/03/killing-ads-in-rss-feeds-in-vienna/</guid>
      <description>Almost five years ago (in mid-2007) I wrote about how to kill ads in RSS feeds in NetNewsWire. That technique has been a lifesaver for me, as I rely heavily upon RSS feeds to stay up-to-date with information and trends.
Recently, though, I started experimenting with Vienna, the open source RSS reader for Mac OS X. One of the first things I noticed was the ads in the RSS feeds in Vienna, so I started searching for a way&amp;mdash;if one existed&amp;mdash;to bring the same ad-blocking functionality to Vienna.</description>
    </item>
    
    <item>
      <title>Shortening URLs via bit.ly the Apple Way</title>
      <link>https://www.howellyang.com/2010/10/22/shortening-urls-via-bitly-the-apple-way/</link>
      <pubDate>Fri, 22 Oct 2010 11:18:07 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2010/10/22/shortening-urls-via-bitly-the-apple-way/</guid>
      <description>A couple of days ago I wrote about how to use the UNIX CLI in Mac OS X to shorten a URL via bit.ly, while adding the URL to your link history in case you want to re-use it in the future. Now I&amp;rsquo;m going to take that information and show you how to further integrate this into your Mac&amp;rsquo;s environment using AppleScript and Automator.
The necessary glue here are these two facts:</description>
    </item>
    
    <item>
      <title>Shortening URLs via bit.ly from the CLI</title>
      <link>https://www.howellyang.com/2010/10/20/shortening-urls-via-bitly-from-the-cli/</link>
      <pubDate>Wed, 20 Oct 2010 18:33:39 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2010/10/20/shortening-urls-via-bitly-from-the-cli/</guid>
      <description>I was experimenting tonight with some ways to add more automation to my workflow. One process that is (relatively) time-consuming is the process of generating short URLs via bit.ly. This site had a brief tutorial on how to use curl to do it, but the shortened link didn&amp;rsquo;t show up in my link history. Upon browsing the bit.ly API documentation, though, I was able to fairly quickly piece together a command line that will shorten a URL via bit.</description>
    </item>
    
    <item>
      <title>Revisiting Evernote</title>
      <link>https://www.howellyang.com/2010/10/02/revisiting-evernote/</link>
      <pubDate>Sat, 02 Oct 2010 11:23:38 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2010/10/02/revisiting-evernote/</guid>
      <description>About two years ago, I took a look at Evernote (here&amp;rsquo;s the main Evernote web site), which at that time was still in beta. While I was intrigued with the idea of Evernote, at that time I struggled with getting data into Evernote. The Web Clipper didn&amp;rsquo;t seem intuitive to me, and I wrestled with how best to use Evernote within my fledgling productivity system.
Since that time, I settled on the use of OmniFocus for organizing commitments and Yojimbo for organizing information (more on how I use these two applications is found in this update on my Getting Things Done setup).</description>
    </item>
    
    <item>
      <title>The Perfect Mac Twitter Client</title>
      <link>https://www.howellyang.com/2009/04/05/the-perfect-mac-twitter-client/</link>
      <pubDate>Sun, 05 Apr 2009 18:43:10 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2009/04/05/the-perfect-mac-twitter-client/</guid>
      <description>No, I haven&amp;rsquo;t found it yet. Sorry, I hope I didn&amp;rsquo;t get your hopes up with that headline. I&amp;rsquo;ve been testing a bunch of different Mac clients for Twitter, and I just can&amp;rsquo;t seem to find the client that has the right mix of features. So, in the hopes that some of the developers of these various applications are reading, here are some of the applications I&amp;rsquo;ve tested and what I like about each one.</description>
    </item>
    
    <item>
      <title>Welcome to Hyper9!</title>
      <link>https://www.howellyang.com/2009/03/23/welcome-to-hyper9/</link>
      <pubDate>Mon, 23 Mar 2009 18:36:06 +0000</pubDate>
      
      <guid>https://www.howellyang.com/2009/03/23/welcome-to-hyper9/</guid>
      <description>I&amp;rsquo;d like to welcome our second sponsor, Hyper9! As you know, Hyper9 recently launched their flagship search-based administration product. I&amp;rsquo;m excited to be able to partner with them and I appreciate their sponsorship of the site.
If there are any other companies out there that may be interested in sponsoring the site, I have a few spots still remaining. Feel free to contact me if you want more information.</description>
    </item>
    
  </channel>
</rss>
